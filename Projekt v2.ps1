#Generated Form Function
function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
# Generated On: 12.09.2021 19:50
# Generated By: Janis
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$lblziel = New-Object System.Windows.Forms.Label
$btnpfad2loeschen = New-Object System.Windows.Forms.Button
$btnpfad2suche = New-Object System.Windows.Forms.Button
$txbpfad2 = New-Object System.Windows.Forms.TextBox
$btnstart = New-Object System.Windows.Forms.Button
$lsblog = New-Object System.Windows.Forms.ListBox
$txbpasseingabe = New-Object System.Windows.Forms.TextBox
$ckbpass = New-Object System.Windows.Forms.CheckBox
$ckbzip = New-Object System.Windows.Forms.CheckBox
$btnpfad1loeschen = New-Object System.Windows.Forms.Button
$btnpfad1suche = New-Object System.Windows.Forms.Button
$lblweiterepfadesichern = New-Object System.Windows.Forms.Label
$txbpfad1 = New-Object System.Windows.Forms.TextBox
$lsbdrives = New-Object System.Windows.Forms.ListBox
$ckbbilder = New-Object System.Windows.Forms.CheckBox
$ckbmusik = New-Object System.Windows.Forms.CheckBox
$ckbvideos = New-Object System.Windows.Forms.CheckBox
$ckbdokumente = New-Object System.Windows.Forms.CheckBox
$ckbdownloads = New-Object System.Windows.Forms.CheckBox
$lblabstand = New-Object System.Windows.Forms.Label
$lblquelle = New-Object System.Windows.Forms.Label
$ckbdesktop = New-Object System.Windows.Forms.CheckBox
$ofddialog = New-Object System.Windows.Forms.OpenFileDialog
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$btnpfad2loeschen_OnClick= 
{
    $txbpfad2.Text = $null
}

$btnpfad1suche_OnClick= 
{
    $foldername = New-Object System.Windows.Forms.FolderBrowserDialog    #Auswähldialog wird geladen
    $foldername.rootfolder = "MyComputer"                                #Rootfolder für Dialog wird festgelegt
    $foldername.SelectedPath = $initialDirectory                         #Ausgewählter Ordner = MyComputer
    if($foldername.ShowDialog() -eq "OK"){                               #Wenn Ok gedrückt wird = Pfad wird ausgewählt
        $txbpfad1.Text = $foldername.SelectedPath
    }


}


[int]$random = get-random                                                #Eine Random Zahl wird generiert
[string]$date = Get-Date -Format "MM-dd-yyyy_HH-mm-ss"                   #Derzeitiges Datum und Uhrzeit für Backupordner
[string]$ordner = ""                                                     #Backupordner
[string]$leer = "ja"                                                     #Für Fehleingaben
$btnstart_OnClick= 
{
    $lsblog.BackColor = "snow"
    $lsbdrives.SelectedItem                                              #Erkennt ob eine Zielfestplatte ausgewählt worden ist
    if ($lsbdrives.SelectedItem -eq $null){$lsblog.Items.Add("Bitte eine Zielfestplatte auswählen!")|Out-Null; $lsblog.BackColor = "tomato"}
    else {
        if ($ckbdesktop.checked){$leer = "nein"}                         #Erkennt ob mindestens eine Quelle ausgewählt worden ist
        if ($ckbdokumente.checked){$leer = "nein"}
        if ($ckbdownloads.checked){$leer = "nein"}
        if ($ckbmusik.checked){$leer = "nein"}
        if ($ckbbilder.checked){$leer = "nein"}
        if ($ckbvideos.checked){$leer = "nein"}
        if ($txbpfad2.text -ne ""){$leer = "nein"}
        if ($txbpfad1.text -ne ""){$leer = "nein"}
        if ($leer -eq "ja"){$lsblog.Items.Add("Bitte mindestens eine Quelle auswählen!")|Out-Null; $lsblog.BackColor = "tomato"}
        else {
        $ordner = $lsbdrives.SelectedItem+"Backup\"                      #$Ordner zu Zielpfad
        $ordner = $ordner+$date                                          #$Ordner mit Zielordner ergänzen
        if (test-path -path $ordner){$lsblog.Items.Add($ordner+" existiert bereits")|Out-Null}  #Überprüfen ob dieser Ordner bereits existiert
        else {$lsblog.Items.Add($ordner+" wird erstellt...")|Out-Null;mkdir $ordner}            #Erstellt Zielordner
        cd ~                                                             #Überprüft die einzelnen Checkboxen ob sie markiert sind
        if ($ckbdesktop.checked){Copy-Item  -Path .\Desktop -Destination $ordner -Recurse -force; $lsblog.Items.Add("Desktop erfolgreich übertragen")|Out-Null}
        if ($ckbdokumente.checked){Copy-Item  -Path .\Documents -Destination $ordner -Recurse -force; $lsblog.Items.Add("Dokumente erfolgreich übertragen")|Out-Null}
        if ($ckbdownloads.checked){Copy-Item  -Path .\Downloads -Destination $ordner -Recurse -force; $lsblog.Items.Add("Downloads erfolgreich übertragen")|Out-Null}
        if ($ckbmusik.checked){Copy-Item  -Path .\Music -Destination $ordner -Recurse -force; $lsblog.Items.Add("Musik erfolgreich übertragen")|Out-Null}
        if ($ckbbilder.checked){Copy-Item  -Path .\Pictures -Destination $ordner -Recurse -force; $lsblog.Items.Add("Bilder erfolgreich übertragen")|Out-Null}
        if ($ckbvideos.checked){Copy-Item  -Path .\Videos -Destination $ordner -Recurse -force; $lsblog.Items.Add("Videos erfolgreich übertragen")|Out-Null}
        if ($txbpfad2.text -ne ""){Copy-Item  -Path $txbpfad2.text -Destination $ordner -Recurse -force; $lsblog.Items.Add("Ausgewählter Pfad (1) erfolgreich übertragen")|Out-Null}
        if ($txbpfad1.text -ne ""){Copy-Item  -Path $txbpfad1.text -Destination $ordner -Recurse -force; $lsblog.Items.Add("Ausgewählter Pfad (2) erfolgreich übertragen")|Out-Null}
    if ($ckbzip.Checked){
        if ($ckbpass.Checked){
            if (Get-Module -ListAvailable -Name 7Zip4Powershell) {                    #Falls 7zip nicht existiert Addon installieren (Benötigt Admin, ansonsten erscheint Fehler)
                $lsblog.Items.Add("7zip existiert bereits")|Out-Null
            } 
            else {
                $lsblog.Items.Add("NuGet wird installiert...")|Out-Null               #Nuget wird für 7zip benötigt
                Set-PSRepository -Name PSGallery -InstallationPolicy Trusted          #Repository von Nuget als vertrauenswürdig einstufen
                Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -force  #Installiert Nuget
                $lsblog.Items.Add("7zip wird installiert...")|Out-Null                #Log
                Install-Module -Name 7Zip4Powershell -RequiredVersion 1.8.0           #7zip installieren
                $lsblog.Items.Add("7zip erfolgreich installiert")|Out-Null            #Log
            }
                cd $ordner                                                            #Führt Scripts im Backupordner aus
                cd ../
                $lsblog.Items.Add("Archiv wird erstellt und verschlüsselt...")|Out-Null                        #log
                Compress-7Zip -Path $ordner -password $txbpasseingabe.text -ArchiveFileName $date".zip" -Format Zip #Erstellt Passwortverschlüsseltes Zip
                $lsblog.Items.Add("Temporärer Ordern wird gelöscht...")|Out-Null      #log                            
                remove-item -Path $ordner -Recurse -force                             #Temporärer Ordner löschen wenn Zip erstellt worden ist
        }else {
            cd $ordner
            cd ../
            $lsblog.Items.Add("Archiv wird erstellt...")|Out-Null                     #log
            Compress-7Zip -Path $ordner -ArchiveFileName $date".zip" -Format Zip      #Zip ohne Passwort erstellen
            $lsblog.Items.Add("Temporärer Ordern wird gelöscht...")|Out-Null          #log
            remove-item -Path $ordner -Recurse -force                                 #Temporärer Ordner löschen
        }}
        $lsblog.Items.Add("Backup erfolgreich abgeschlossen!")|Out-Null               #log
        $lsblog.BackColor = "springgreen"                                             #log Grün (Erfolg)
        

}}}

$handler_checkBox7_CheckedChanged= 
{
    if ($ckbzip.Checked -eq $true){                                                   #Wenn Zip nicht aktiv ist soll Pass unsichtbar sein
        $ckbpass.visible = $true
        if ($ckbpass.Checked -eq $true){$txbpasseingabe.visible = $true} else {$txbpasseingabe.visible = $false}

    } else {
        $ckbpass.visible = $false
        $txbpasseingabe.Visible = $false
    }

}

$handler_checkBox8_CheckedChanged=                                                    #Wenn Pass nicht aktiviert ist soll Passeingabe unsichtbar sein
{
    if ($ckbpass.Checked -eq $true){$txbpasseingabe.visible = $true} else {$txbpasseingabe.visible = $false}

}

$btnpfad1loeschen_OnClick= 
{
    $txbpfad1.Text = $null                                            #Leert Pfad bei Eingabe

}

$handler_checkBox3_CheckedChanged= 
{


}

$btnpfad2suche_OnClick= 
{
    $foldername = New-Object System.Windows.Forms.FolderBrowserDialog  #Folderbrowsing aktivieren
    $foldername.rootfolder = "MyComputer"                              #Standardpfad beim Öffnen des Dialogs auswählen
    $foldername.SelectedPath = $initialDirectory                       #Standardmässig ausgewählter Ordner
    if($foldername.ShowDialog() -eq "OK"){                             #Wenn ok gedrückt wird wird der Ausgewählte Ordner gesetzt
        $txbpfad2.Text = $foldername.SelectedPath
    }

}

$handler_textBox2_TextChanged= 
{
#TODO: Place custom script here

}

$handler_form1_Load= 
{
#TODO: Place custom script here

}

$handler_checkBox5_CheckedChanged= 
{

}

$handler_openFileDialog1_FileOk= 
{
#TODO: Place custom script here

}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$form1.BackColor = [System.Drawing.Color]::FromArgb(255,0,120,215)
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 410
$System_Drawing_Size.Width = 849
$form1.ClientSize = $System_Drawing_Size
$form1.Cursor = [System.Windows.Forms.Cursors]::Arrow
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Font = New-Object System.Drawing.Font("Calibri",8.25,0,3,0)
$form1.ForeColor = [System.Drawing.Color]::FromArgb(255,255,255,255)
$form1.Name = "form1"
$form1.Text = "Backup"
$form1.add_Load($handler_form1_Load)

$lblziel.DataBindings.DefaultDataSourceUpdateMode = 0
$lblziel.Font = New-Object System.Drawing.Font("Calibri",20.25,1,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 609
$System_Drawing_Point.Y = 26
$lblziel.Location = $System_Drawing_Point
$lblziel.Name = "ziel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 37
$System_Drawing_Size.Width = 76
$lblziel.Size = $System_Drawing_Size
$lblziel.TabIndex = 18
$lblziel.Text = "Ziel:"

$form1.Controls.Add($lblziel)


$btnpfad2loeschen.DataBindings.DefaultDataSourceUpdateMode = 0
$btnpfad2loeschen.ForeColor = [System.Drawing.Color]::FromArgb(255,0,0,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 322
$System_Drawing_Point.Y = 212
$btnpfad2loeschen.Location = $System_Drawing_Point
$btnpfad2loeschen.Name = "pfad2loeschen"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 22
$System_Drawing_Size.Width = 25
$btnpfad2loeschen.Size = $System_Drawing_Size
$btnpfad2loeschen.TabIndex = 23
$btnpfad2loeschen.Text = "X"
$btnpfad2loeschen.UseVisualStyleBackColor = $True
$btnpfad2loeschen.add_Click($btnpfad2loeschen_OnClick)

$form1.Controls.Add($btnpfad2loeschen)


$btnpfad2suche.DataBindings.DefaultDataSourceUpdateMode = 0
$btnpfad2suche.ForeColor = [System.Drawing.Color]::FromArgb(255,0,0,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 292
$System_Drawing_Point.Y = 212
$btnpfad2suche.Location = $System_Drawing_Point
$btnpfad2suche.Name = "pfad2suche"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 24
$btnpfad2suche.Size = $System_Drawing_Size
$btnpfad2suche.TabIndex = 22
$btnpfad2suche.Text = "..."
$btnpfad2suche.UseVisualStyleBackColor = $True
$btnpfad2suche.add_Click($btnpfad2suche_OnClick)

$form1.Controls.Add($btnpfad2suche)

$txbpfad2.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 213
$txbpfad2.Location = $System_Drawing_Point
$txbpfad2.Name = "pfad2"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 242
$txbpfad2.Size = $System_Drawing_Size
$txbpfad2.TabIndex = 21

$form1.Controls.Add($txbpfad2)


$btnstart.DataBindings.DefaultDataSourceUpdateMode = 0
$btnstart.Font = New-Object System.Drawing.Font("Calibri",12,1,3,0)
$btnstart.ForeColor = [System.Drawing.Color]::FromArgb(255,0,128,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 351
$btnstart.Location = $System_Drawing_Point
$btnstart.Name = "start"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 32
$System_Drawing_Size.Width = 823
$btnstart.Size = $System_Drawing_Size
$btnstart.TabIndex = 20
$btnstart.Text = "Start"
$btnstart.UseVisualStyleBackColor = $True
$btnstart.add_Click($btnstart_OnClick)

$form1.Controls.Add($btnstart)

$lsblog.DataBindings.DefaultDataSourceUpdateMode = 0
$lsblog.FormattingEnabled = $True
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 249
$lsblog.Location = $System_Drawing_Point
$lsblog.Name = "listBox2"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 95
$System_Drawing_Size.Width = 824
$lsblog.Size = $System_Drawing_Size
$lsblog.TabIndex = 19

$form1.Controls.Add($lsblog)

$txbpasseingabe.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 545
$System_Drawing_Point.Y = 213
$txbpasseingabe.Location = $System_Drawing_Point
$txbpasseingabe.Name = "passeingabe"
$txbpasseingabe.PasswordChar ='?'
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 193
$txbpasseingabe.Size = $System_Drawing_Size
$txbpasseingabe.TabIndex = 17
$txbpasseingabe.add_TextChanged($handler_textBox2_TextChanged)
$txbpasseingabe.Visible = $false

$form1.Controls.Add($txbpasseingabe)


$ckbpass.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 545
$System_Drawing_Point.Y = 183
$ckbpass.Location = $System_Drawing_Point
$ckbpass.Name = "pass"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 245
$ckbpass.Size = $System_Drawing_Size
$ckbpass.TabIndex = 16
$ckbpass.Text = "Zip Archiv mit Passwort verschlüsseln"
$ckbpass.UseVisualStyleBackColor = $True
$ckbpass.add_CheckedChanged($handler_checkBox8_CheckedChanged)


$form1.Controls.Add($ckbpass)


$ckbzip.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 545
$System_Drawing_Point.Y = 158
$ckbzip.Location = $System_Drawing_Point
$ckbzip.Name = "zip"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 250
$ckbzip.Size = $System_Drawing_Size
$ckbzip.TabIndex = 15
$ckbzip.Text = "Dateien als Zip Archiv speichern"
$ckbzip.UseVisualStyleBackColor = $True
$ckbzip.add_CheckedChanged($handler_checkBox7_CheckedChanged)
#$ckbzip.Enabled = $False
$ckbzip.Checked = $True
$ckbzip.ForeColor = [System.Drawing.Color]::FromArgb(255,255,255,255)

$form1.Controls.Add($ckbzip)


$btnpfad1loeschen.DataBindings.DefaultDataSourceUpdateMode = 0
$btnpfad1loeschen.ForeColor = [System.Drawing.Color]::FromArgb(255,0,0,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 322
$System_Drawing_Point.Y = 184
$btnpfad1loeschen.Location = $System_Drawing_Point
$btnpfad1loeschen.Name = "pfad1loeschen"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 25
$btnpfad1loeschen.Size = $System_Drawing_Size
$btnpfad1loeschen.TabIndex = 14
$btnpfad1loeschen.Text = "X"
$btnpfad1loeschen.UseVisualStyleBackColor = $True
$btnpfad1loeschen.add_Click($btnpfad1loeschen_OnClick)

$form1.Controls.Add($btnpfad1loeschen)


$btnpfad1suche.DataBindings.DefaultDataSourceUpdateMode = 0
$btnpfad1suche.ForeColor = [System.Drawing.Color]::FromArgb(255,0,0,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 292
$System_Drawing_Point.Y = 184
$btnpfad1suche.Location = $System_Drawing_Point
$btnpfad1suche.Name = "pfad1suche"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 24
$btnpfad1suche.Size = $System_Drawing_Size
$btnpfad1suche.TabIndex = 13
$btnpfad1suche.Text = "..."
$btnpfad1suche.UseVisualStyleBackColor = $True
$btnpfad1suche.add_Click($btnpfad1suche_OnClick)

$form1.Controls.Add($btnpfad1suche)

$lblweiterepfadesichern.DataBindings.DefaultDataSourceUpdateMode = 0
$lblweiterepfadesichern.Font = New-Object System.Drawing.Font("Calibri",9.75,1,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 161
$lblweiterepfadesichern.Location = $System_Drawing_Point
$lblweiterepfadesichern.Name = "label4"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 22
$System_Drawing_Size.Width = 197
$lblweiterepfadesichern.Size = $System_Drawing_Size
$lblweiterepfadesichern.TabIndex = 12
$lblweiterepfadesichern.Text = "Weitere Pfade zum sichern:"

$form1.Controls.Add($lblweiterepfadesichern)

$txbpfad1.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 186
$txbpfad1.Location = $System_Drawing_Point
$txbpfad1.Name = "pfad1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 21
$System_Drawing_Size.Width = 242
$txbpfad1.Size = $System_Drawing_Size
$txbpfad1.TabIndex = 11

$form1.Controls.Add($txbpfad1)

$lsbdrives.DataBindings.DefaultDataSourceUpdateMode = 0
$lsbdrives.FormattingEnabled = $True
$lsbdrives.Items.Add("Bitte warten...")|Out-Null
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 438
$System_Drawing_Point.Y = 73
$lsbdrives.Location = $System_Drawing_Point
$lsbdrives.Name = "drives"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 82
$System_Drawing_Size.Width = 398
$lsbdrives.Size = $System_Drawing_Size
$lsbdrives.TabIndex = 10

$form1.Controls.Add($lsbdrives)

$lsbdrives.Items.Clear()
$drivevar = (Get-PSDrive -PSProvider FileSystem).Root
for ($i=0; $i -lt $drivevar.length; $i++){
    $lsbdrives.Items.Add($drivevar[$i])|Out-Null }

$ckbbilder.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 231
$System_Drawing_Point.Y = 130
$ckbbilder.Location = $System_Drawing_Point
$ckbbilder.Name = "bilder"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 104
$ckbbilder.Size = $System_Drawing_Size
$ckbbilder.TabIndex = 7
$ckbbilder.Text = "Bilder"
$ckbbilder.UseVisualStyleBackColor = $True

$form1.Controls.Add($ckbbilder)


$ckbmusik.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 130
$ckbmusik.Location = $System_Drawing_Point
$ckbmusik.Name = "musik"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 104
$ckbmusik.Size = $System_Drawing_Size
$ckbmusik.TabIndex = 6
$ckbmusik.Text = "Musik"
$ckbmusik.UseVisualStyleBackColor = $True
$ckbmusik.add_CheckedChanged($handler_checkBox5_CheckedChanged)

$form1.Controls.Add($ckbmusik)


$ckbvideos.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 231
$System_Drawing_Point.Y = 100
$ckbvideos.Location = $System_Drawing_Point
$ckbvideos.Name = "videos"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 104
$ckbvideos.Size = $System_Drawing_Size
$ckbvideos.TabIndex = 5
$ckbvideos.Text = "Videos"
$ckbvideos.UseVisualStyleBackColor = $True

$form1.Controls.Add($ckbvideos)


$ckbdokumente.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 100
$ckbdokumente.Location = $System_Drawing_Point
$ckbdokumente.Name = "dokumente"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 104
$ckbdokumente.Size = $System_Drawing_Size
$ckbdokumente.TabIndex = 4
$ckbdokumente.Text = "Dokumente"
$ckbdokumente.UseVisualStyleBackColor = $True
$ckbdokumente.add_CheckedChanged($handler_checkBox3_CheckedChanged)

$form1.Controls.Add($ckbdokumente)


$ckbdownloads.DataBindings.DefaultDataSourceUpdateMode = 0
$ckbdownloads.ForeColor = [System.Drawing.Color]::FromArgb(255,255,255,255)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 231
$System_Drawing_Point.Y = 73
$ckbdownloads.Location = $System_Drawing_Point
$ckbdownloads.Name = "downloads"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 24
$System_Drawing_Size.Width = 104
$ckbdownloads.Size = $System_Drawing_Size
$ckbdownloads.TabIndex = 3
$ckbdownloads.Text = "Downloads"
$ckbdownloads.UseVisualStyleBackColor = $True

$form1.Controls.Add($ckbdownloads)

$lblabstand.BackColor = [System.Drawing.Color]::FromArgb(255,255,255,255)
$lblabstand.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 410
$System_Drawing_Point.Y = -2
$lblabstand.Location = $System_Drawing_Point
$lblabstand.Name = "label2"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 264
$System_Drawing_Size.Width = 10
$lblabstand.Size = $System_Drawing_Size
$lblabstand.TabIndex = 2

$form1.Controls.Add($lblabstand)

$lblquelle.DataBindings.DefaultDataSourceUpdateMode = 0
$lblquelle.Font = New-Object System.Drawing.Font("Calibri",20.25,1,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 125
$System_Drawing_Point.Y = 26
$lblquelle.Location = $System_Drawing_Point
$lblquelle.Name = "label1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 37
$System_Drawing_Size.Width = 180
$lblquelle.Size = $System_Drawing_Size
$lblquelle.TabIndex = 1
$lblquelle.Text = "Quelle:"

$form1.Controls.Add($lblquelle)


$ckbdesktop.DataBindings.DefaultDataSourceUpdateMode = 0
$ckbdesktop.ForeColor = [System.Drawing.Color]::FromArgb(255,255,255,255)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 44
$System_Drawing_Point.Y = 66
$ckbdesktop.Location = $System_Drawing_Point
$ckbdesktop.Name = "desktop"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 39
$System_Drawing_Size.Width = 118
$ckbdesktop.Size = $System_Drawing_Size
$ckbdesktop.TabIndex = 0
$ckbdesktop.Text = "Desktop"
$ckbdesktop.UseVisualStyleBackColor = $True

$form1.Controls.Add($ckbdesktop)

$ofddialog.FileName = "openFileDialog1"
$ofddialog.ShowHelp = $True
$ofddialog.add_FileOk($handler_openFileDialog1_FileOk)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm



 

